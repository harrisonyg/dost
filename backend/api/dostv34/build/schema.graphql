type MsgCode {
  id: ID!
  message: String!
  createdAt: AWSDateTime!
  updatedAt: AWSDateTime!
  owner: String
}

type MsgAi {
  id: ID!
  message: String!
  createdAt: AWSDateTime!
  updatedAt: AWSDateTime!
  owner: String
}

input ModelStringInput {
  ne: String
  eq: String
  le: String
  lt: String
  ge: String
  gt: String
  contains: String
  notContains: String
  between: [String]
  beginsWith: String
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
  size: ModelSizeInput
}

input ModelIntInput {
  ne: Int
  eq: Int
  le: Int
  lt: Int
  ge: Int
  gt: Int
  between: [Int]
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
}

input ModelFloatInput {
  ne: Float
  eq: Float
  le: Float
  lt: Float
  ge: Float
  gt: Float
  between: [Float]
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
}

input ModelBooleanInput {
  ne: Boolean
  eq: Boolean
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
}

input ModelIDInput {
  ne: ID
  eq: ID
  le: ID
  lt: ID
  ge: ID
  gt: ID
  contains: ID
  notContains: ID
  between: [ID]
  beginsWith: ID
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
  size: ModelSizeInput
}

input ModelSubscriptionStringInput {
  ne: String
  eq: String
  le: String
  lt: String
  ge: String
  gt: String
  contains: String
  notContains: String
  between: [String]
  beginsWith: String
  in: [String]
  notIn: [String]
}

input ModelSubscriptionIntInput {
  ne: Int
  eq: Int
  le: Int
  lt: Int
  ge: Int
  gt: Int
  between: [Int]
  in: [Int]
  notIn: [Int]
}

input ModelSubscriptionFloatInput {
  ne: Float
  eq: Float
  le: Float
  lt: Float
  ge: Float
  gt: Float
  between: [Float]
  in: [Float]
  notIn: [Float]
}

input ModelSubscriptionBooleanInput {
  ne: Boolean
  eq: Boolean
}

input ModelSubscriptionIDInput {
  ne: ID
  eq: ID
  le: ID
  lt: ID
  ge: ID
  gt: ID
  contains: ID
  notContains: ID
  between: [ID]
  beginsWith: ID
  in: [ID]
  notIn: [ID]
}

enum ModelAttributeTypes {
  binary
  binarySet
  bool
  list
  map
  number
  numberSet
  string
  stringSet
  _null
}

input ModelSizeInput {
  ne: Int
  eq: Int
  le: Int
  lt: Int
  ge: Int
  gt: Int
  between: [Int]
}

enum ModelSortDirection {
  ASC
  DESC
}

type ModelMsgCodeConnection {
  items: [MsgCode]!
  nextToken: String
}

input ModelMsgCodeFilterInput {
  id: ModelIDInput
  message: ModelStringInput
  and: [ModelMsgCodeFilterInput]
  or: [ModelMsgCodeFilterInput]
  not: ModelMsgCodeFilterInput
}

type Query {
  getMsgCode(id: ID!): MsgCode
  listMsgCodes(filter: ModelMsgCodeFilterInput, limit: Int, nextToken: String): ModelMsgCodeConnection
  getMsgAi(id: ID!): MsgAi
  listMsgAis(filter: ModelMsgAiFilterInput, limit: Int, nextToken: String): ModelMsgAiConnection
}

input ModelMsgCodeConditionInput {
  message: ModelStringInput
  and: [ModelMsgCodeConditionInput]
  or: [ModelMsgCodeConditionInput]
  not: ModelMsgCodeConditionInput
}

input CreateMsgCodeInput {
  id: ID
  message: String!
}

input UpdateMsgCodeInput {
  id: ID!
  message: String
}

input DeleteMsgCodeInput {
  id: ID!
}

type Mutation {
  createMsgCode(input: CreateMsgCodeInput!, condition: ModelMsgCodeConditionInput): MsgCode
  updateMsgCode(input: UpdateMsgCodeInput!, condition: ModelMsgCodeConditionInput): MsgCode
  deleteMsgCode(input: DeleteMsgCodeInput!, condition: ModelMsgCodeConditionInput): MsgCode
  createMsgAi(input: CreateMsgAiInput!, condition: ModelMsgAiConditionInput): MsgAi
  updateMsgAi(input: UpdateMsgAiInput!, condition: ModelMsgAiConditionInput): MsgAi
  deleteMsgAi(input: DeleteMsgAiInput!, condition: ModelMsgAiConditionInput): MsgAi
}

input ModelSubscriptionMsgCodeFilterInput {
  id: ModelSubscriptionIDInput
  message: ModelSubscriptionStringInput
  and: [ModelSubscriptionMsgCodeFilterInput]
  or: [ModelSubscriptionMsgCodeFilterInput]
}

type Subscription {
  onCreateMsgCode(filter: ModelSubscriptionMsgCodeFilterInput, owner: String): MsgCode @aws_subscribe(mutations: ["createMsgCode"])
  onUpdateMsgCode(filter: ModelSubscriptionMsgCodeFilterInput, owner: String): MsgCode @aws_subscribe(mutations: ["updateMsgCode"])
  onDeleteMsgCode(filter: ModelSubscriptionMsgCodeFilterInput, owner: String): MsgCode @aws_subscribe(mutations: ["deleteMsgCode"])
  onCreateMsgAi(filter: ModelSubscriptionMsgAiFilterInput, owner: String): MsgAi @aws_subscribe(mutations: ["createMsgAi"])
  onUpdateMsgAi(filter: ModelSubscriptionMsgAiFilterInput, owner: String): MsgAi @aws_subscribe(mutations: ["updateMsgAi"])
  onDeleteMsgAi(filter: ModelSubscriptionMsgAiFilterInput, owner: String): MsgAi @aws_subscribe(mutations: ["deleteMsgAi"])
}

type ModelMsgAiConnection {
  items: [MsgAi]!
  nextToken: String
}

input ModelMsgAiFilterInput {
  id: ModelIDInput
  message: ModelStringInput
  and: [ModelMsgAiFilterInput]
  or: [ModelMsgAiFilterInput]
  not: ModelMsgAiFilterInput
}

input ModelMsgAiConditionInput {
  message: ModelStringInput
  and: [ModelMsgAiConditionInput]
  or: [ModelMsgAiConditionInput]
  not: ModelMsgAiConditionInput
}

input CreateMsgAiInput {
  id: ID
  message: String!
}

input UpdateMsgAiInput {
  id: ID!
  message: String
}

input DeleteMsgAiInput {
  id: ID!
}

input ModelSubscriptionMsgAiFilterInput {
  id: ModelSubscriptionIDInput
  message: ModelSubscriptionStringInput
  and: [ModelSubscriptionMsgAiFilterInput]
  or: [ModelSubscriptionMsgAiFilterInput]
}
